pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build') {
            steps {
                // Build Docker images for the server and frontend
                sh 'docker build -t guy66bp/appserver ./server'
                sh 'docker build -t guy66bp/appfront ./frontend'
            }
        }
        stage('Deploy containers') {
            steps {
                // Deploy Docker containers for the server and frontend
                sh 'docker run -d -p 3001:3001 guy66bp/appserver'
                sh 'sleep 2' // Give the container some time to start up
                sh 'docker run -d -p 3000:3000 guy66bp/appfront'
                sh 'sleep 2' // Give the container some time to start up
            }
        }
        stage('Run tests') {
            steps {
                // Run pytest for your tests and capture the exit code
                script {
                    def exitCode = sh(script: 'pytest test/test.py', returnStatus: true)
                    if (exitCode != 0) {
                        error 'Tests failed! Pipeline failed.'
                    }
                }
            }
        }
    }
    post {
        success {
            // Only execute this block if the previous stages succeeded
            echo 'All tests passed! Pipeline succeeded.'
        }
        failure {
            // Only execute this block if any of the previous stages failed
            echo 'Tests failed! Pipeline failed.'
        }
    }
}
