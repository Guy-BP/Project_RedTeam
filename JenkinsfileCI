pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build') {
            steps {
                // Build Docker images for the server and frontend
                sh 'docker build -t guy66bp/appserver ./server'
                sh 'docker build -t guy66bp/appfront ./frontend'

                // Build image for Pytest
                sh 'docker build -t guy66bp/apptest ./test'
            }
        }
        stage('Deploy app containers') {
            steps {
                // Deploy Docker containers for the server and frontend
                sh 'docker run -d -p 3001:3001 guy66bp/appserver'
                sh 'sleep 2' // Give the container some time to start up
                sh 'docker run -d -p 3000:3000 guy66bp/appfront'
                sh 'sleep 2' // Give the container some time to start up
            }
        }
        stage('Run tests') {
            steps {
                // Run pytest for your tests and capture the exit code
                script {
                    def exitCode = sh(script: 'docker exec guy66bp/apptest pytest --junitxml=test-results/test-report.xml ./test', returnStatus: true)
                    if (exitCode == 0) {
                        echo 'Tests passed! Pipeline succeeded.'
                    } else {
                        error 'Tests failed! Pipeline failed.'
                    }
                }
            }
        }
        stage('Remove containers') {
            steps {
                // Remove running Docker containers
                sh 'docker rm -f $(docker ps -q)'
            }
        }
    }
}
